id,question,option_a,option_b,option_c,answer,category,difficulty,knowledge_point,question_type,chapter,explanation
1,在Python中，以下哪個庫主要用於數據分析和處理？,NumPy,Pandas,Matplotlib,b,Pandas,簡單,Python數據分析庫,概念題,數據分析導論,Pandas是Python中主要用於數據分析和處理的庫，它提供了高效的DataFrame和Series數據結構，以及豐富的數據操作功能。NumPy主要用於科學計算和數組操作，Matplotlib主要用於數據可視化。
2,在NumPy中，以下哪個函數用於創建一個全為0的數組？,np.zeros(),np.empty(),np.ones(),a,NumPy,簡單,NumPy數組創建,函數應用題,NumPy基礎,np.zeros()函數用於創建一個全為0的數組。np.empty()創建一個未初始化的數組，其初始值取決於內存的狀態。np.ones()創建一個全為1的數組。
3,"以下Python代碼的輸出是什麼？

print([1, 2, 3] + [4, 5, 6])","[1, 2, 3, 4, 5, 6]","[5, 7, 9]",錯誤,a,Python基礎,簡單,列表操作,代碼執行題,數據結構,"在Python中，使用加號(+)對兩個列表進行操作會將它們連接起來，而不是進行元素相加。因此[1, 2, 3] + [4, 5, 6]的結果是[1, 2, 3, 4, 5, 6]。"
4,在Pandas中，以下哪個方法用於處理重複數據？,drop_duplicates(),remove_duplicates(),delete_duplicates(),a,Pandas,簡單,Pandas數據清洗,函數應用題,Pandas數據清洗,Pandas中用於處理重複數據的方法是drop_duplicates()，它可以刪除DataFrame或Series中的重複行。remove_duplicates()和delete_duplicates()不是Pandas的標準方法。
5,以下哪個不是Python的基本數據類型？,int,float,array,c,Python基礎,簡單,Python數據類型,概念題,Python基礎,array不是Python的基本數據類型，它是NumPy庫中的數據類型。Python的基本數據類型包括int（整數）、float（浮點數）、bool（布爾值）、str（字符串）、list（列表）、tuple（元組）、dict（字典）和set（集合）等。
6,在Matplotlib中，以下哪個函數用於創建一個新的圖形？,plt.figure(),plt.plot(),plt.draw(),a,資料視覺化,簡單,Matplotlib基本操作,函數應用題,Matplotlib基礎,plt.figure()用於創建一個新的圖形。plt.plot()用於在當前圖形上繪製數據，而plt.draw()用於更新圖形顯示。
7,"以下NumPy代碼的輸出是什麼？

import numpy as np
print(np.array([1, 2, 3]) * 2)","[1, 2, 3, 1, 2, 3]","[2, 4, 6]","[[1, 2, 3], [1, 2, 3]]",b,NumPy,簡單,NumPy數組操作,代碼執行題,NumPy數組操作,"NumPy數組與標量相乘時，會對數組中的每個元素進行乘法操作。因此np.array([1, 2, 3]) * 2的結果是[2, 4, 6]。"
8,在Pandas中，以下哪個方法用於選擇DataFrame的列？,df.loc[],df.iloc[],df[],c,Pandas,簡單,Pandas數據訪問,函數應用題,Pandas數據訪問,在Pandas中，使用df[]可以選擇DataFrame的列。df.loc[]用於基於標籤的索引，df.iloc[]用於基於位置的索引，兩者都可以用於選擇行和列。
9,"以下Python代碼的輸出是什麼？

print(list(range(5)))","[0, 1, 2, 3, 4]","[1, 2, 3, 4, 5]","[0, 1, 2, 3, 4, 5]",a,Python基礎,簡單,range函數,代碼執行題,控制流,"range(5)生成一個從0開始，不包括5的整數序列，即0, 1, 2, 3, 4。list()函數將這個序列轉換為列表，因此結果是[0, 1, 2, 3, 4]。"
10,在數據分析中，以下哪個圖表最適合顯示數據的分布情況？,折線圖,直方圖,散點圖,b,資料視覺化,簡單,數據可視化選擇,概念題,數據可視化基礎,直方圖是顯示數據分布情況的最佳圖表類型，它將數據分成若干個區間（bin），並顯示每個區間內的數據頻率。折線圖主要用於顯示數據隨時間的變化趨勢，散點圖主要用於顯示兩個變量之間的關係。
11,"以下Pandas代碼的輸出是什麼？

import pandas as pd
df = pd.DataFrame({""A"": [1, 2], ""B"": [3, 4]})
print(df.shape)","(2, 2)","(2, 3)","(3, 2)",a,Pandas,中等,Pandas數據結構,代碼執行題,Pandas基礎,"df.shape返回DataFrame的形狀，即(行數, 列數)。在這個例子中，DataFrame有2行2列，所以shape是(2, 2)。"
12,在Python中，以下哪個語句用於導入模塊？,include numpy as np,import numpy as np,using numpy as np,b,Python基礎,簡單,模塊導入,語法題,Python基礎,在Python中，使用import語句導入模塊，例如import numpy as np。include和using不是Python中用於導入模塊的關鍵字。
13,"以下NumPy代碼的輸出是什麼？

import numpy as np
a = np.array([1, 2, 3])
b = np.array([4, 5, 6])
print(a + b)","[1, 2, 3, 4, 5, 6]","[5, 7, 9]","[[1, 2, 3], [4, 5, 6]]",b,NumPy,中等,NumPy數組操作,代碼執行題,NumPy數組操作,"NumPy數組相加時，會對應位置的元素相加。因此a + b的結果是[1+4, 2+5, 3+6]，即[5, 7, 9]。"
14,在Pandas中，以下哪個方法用於按指定列對DataFrame進行排序？,df.sort(),df.sort_values(),df.order(),b,Pandas,中等,Pandas數據操作,函數應用題,Pandas數據處理,df.sort_values()用於按指定列對DataFrame進行排序。df.sort()是舊版本的方法，已被棄用，df.order()不是Pandas的標準方法。
15,"以下Python代碼的輸出是什麼？

print({1, 2, 2, 3, 3, 3})","{1, 2, 2, 3, 3, 3}","{1, 2, 3}","[1, 2, 3]",b,Python基礎,中等,集合,代碼執行題,數據結構,"在Python中，集合（set）是一種無序且不重複的數據結構。當創建集合時，重複的元素會被自動去除。因此{1, 2, 2, 3, 3, 3}會被簡化為{1, 2, 3}。"
16,在Matplotlib中，以下哪個函數用於設置圖形的標題？,plt.title(),plt.heading(),plt.name(),a,資料視覺化,中等,Matplotlib圖形設置,函數應用題,Matplotlib基礎,plt.title()用於設置圖形的標題。plt.heading()和plt.name()不是Matplotlib的標準函數。
17,"以下NumPy代碼的輸出是什麼？

import numpy as np
print(np.mean([1, 2, 3, 4, 5]))",2,2.5,3,c,NumPy,中等,NumPy統計函數,代碼執行題,NumPy統計操作,"np.mean()計算數組的平均值。[1, 2, 3, 4, 5]的平均值是(1+2+3+4+5)/5 = 15/5 = 3。"
18,在Pandas中，以下哪個方法用於連接兩個DataFrame？,pd.concat(),pd.join(),pd.merge(),a,Pandas,中等,Pandas數據組合,函數應用題,Pandas數據組合,pd.concat()用於連接兩個或多個DataFrame，可以按行（axis=0）或按列（axis=1）連接。pd.join()用於基於索引的連接，pd.merge()用於基於列的連接。
19,"以下Python代碼的輸出是什麼？

print(""Hello""[1:4])",Hell,ello,ell,c,Python基礎,中等,字符串切片,代碼執行題,數據結構,"在Python中，字符串切片[1:4]表示從索引1（包括）到索引4（不包括）的子字符串。""Hello""的索引1是""e""，索引2是""l""，索引3是""l""，所以""Hello""[1:4]是""ell""。"
20,在數據分析中，以下哪個術語表示數據中的異常值？,Outlier,Missing value,Duplicate,a,數據分析概念,中等,數據質量,概念題,數據預處理,Outlier（異常值）是指與其他數據點顯著不同的數據點，通常是極端值或不符合總體分布的值。Missing value（缺失值）是指數據中的空值或未記錄的值，Duplicate（重複值）是指數據中重複出現的記錄。
21,"以下Pandas代碼的輸出是什麼？

import pandas as pd
df = pd.DataFrame({""A"": [1, 2, 3], ""B"": [4, 5, 6]})
print(df[""A""].sum())",6,15,21,a,Pandas,困難,Pandas數據分析,代碼執行題,Pandas數據處理,"df[""A""]選擇DataFrame的A列，返回一個Series。Series的sum()方法計算所有元素的和。A列的元素是[1, 2, 3]，它們的和是1+2+3=6。"
22,在Python中，以下哪個是正確的列表推導式？,[x for x in range(5)],[for x in range(5)],[x in range(5)],a,Python基礎,困難,列表推導式,語法題,高級數據結構,正確的列表推導式語法是[表達式 for 變量 in 可迭代對象]。因此[x for x in range(5)]是正確的，它生成一個包含0到4的列表。
23,"以下NumPy代碼的輸出是什麼？

import numpy as np
a = np.array([[1, 2], [3, 4]])
print(a.T)","[[1, 3], [2, 4]]","[[1, 2], [3, 4]]","[[4, 2], [3, 1]]",a,NumPy,困難,NumPy矩陣操作,代碼執行題,NumPy數組操作,"a.T返回數組a的轉置。轉置操作將行變為列，列變為行。原數組a是[[1, 2], [3, 4]]，轉置後變為[[1, 3], [2, 4]]。"
24,在Pandas中，以下哪個方法用於將時間字符串轉換為datetime對象？,pd.to_datetime(),pd.as_datetime(),pd.convert_datetime(),a,Pandas,困難,Pandas時間序列,函數應用題,Pandas時間序列,pd.to_datetime()用於將時間字符串轉換為datetime對象。pd.as_datetime()和pd.convert_datetime()不是Pandas的標準方法。
25,"以下Python代碼的輸出是什麼？

def func(a, b=1, *args, **kwargs):
    print(a, b, args, kwargs)

func(1, 2, 3, 4, x=5, y=6)","1 2 (3, 4) {'x': 5, 'y': 6}","1 2 3 4 {'x': 5, 'y': 6}","1 2 (3, 4, 5, 6) {}",a,Python基礎,困難,函數參數,代碼執行題,函數進階,"在這個函數調用中，a=1, b=2, args=(3, 4), kwargs={'x': 5, 'y': 6}。*args收集多餘的位置參數，**kwargs收集多餘的關鍵字參數。"
26,在Matplotlib中，以下哪個函數用於繪製柱狀圖？,plt.bar(),plt.hist(),plt.barplot(),a,資料視覺化,困難,Matplotlib繪圖函數,函數應用題,Matplotlib繪圖,plt.bar()用於繪製柱狀圖。plt.hist()用於繪製直方圖，plt.barplot()不是Matplotlib的標準函數。
27,"以下NumPy代碼的輸出是什麼？

import numpy as np
a = np.array([1, 2, 3, 4, 5])
print(a[1:5:2])","[2, 4]","[2, 3, 4]","[2, 4, 6]",a,NumPy,困難,NumPy索引,代碼執行題,NumPy數據訪問,"a[1:5:2]表示從索引1（包括）到索引5（不包括）每隔2個元素選取一個元素。因此選取的元素是索引1的2和索引3的4，結果是[2, 4]。"
28,在Pandas中，以下哪個方法用於計算DataFrame中每列的描述性統計量？,df.stats(),df.describe(),df.summary(),b,Pandas,困難,Pandas統計分析,函數應用題,Pandas統計分析,df.describe()用於計算DataFrame中每列的描述性統計量，包括計數、平均值、標準差、最小值、四分位數和最大值。df.stats()和df.summary()不是Pandas的標準方法。
29,"以下Python代碼的輸出是什麼？

print(dict([('a', 1), ('b', 2)]))","{'a': 1, 'b': 2}","[('a', 1), ('b', 2)]","{1: 'a', 2: 'b'}",a,Python基礎,困難,字典創建,代碼執行題,數據結構,"dict()函數可以從鍵值對列表創建字典。在這個例子中，[('a', 1), ('b', 2)]是一個包含兩個元組的列表，每個元組是一個鍵值對。因此，結果是{'a': 1, 'b': 2}。"
30,在數據分析中，以下哪個步驟通常在特徵選擇之前進行？,模型訓練,數據清洗,模型評估,b,數據分析概念,困難,數據分析流程,概念題,數據分析導論,在數據分析流程中，數據清洗通常在特徵選擇之前進行。數據清洗包括處理缺失值、異常值和重複數據等，這些步驟是為了確保數據的質量，為後續的特徵選擇和模型訓練提供良好的基礎。
31,在Pandas中，以下哪個函數用於讀取CSV文件？,pd.read_csv(),pd.load_csv(),pd.import_csv(),a,Pandas,簡單,Pandas數據導入,函數應用題,Pandas數據導入/導出,pd.read_csv()是Pandas中用於讀取CSV文件的函數。pd.load_csv()和pd.import_csv()不是Pandas的標準函數。
32,Pandas中的主要數據結構不包括以下哪一個？,Series,DataFrame,Array,c,Pandas,簡單,Pandas基本概念,概念題,Pandas基礎,Pandas的主要數據結構是Series和DataFrame。Array是NumPy的數據結構，不是Pandas的主要數據結構。
33,在Matplotlib中，以下哪個函數用於繪製散點圖？,plt.scatter(),plt.plot(),plt.bar(),a,資料視覺化,簡單,Matplotlib繪圖函數,函數應用題,Matplotlib基礎,plt.scatter()是Matplotlib中用於繪製散點圖的函數。plt.plot()主要用於繪製線圖，plt.bar()用於繪製柱狀圖。
34,在Python中，以下哪個語句用於處理異常？,if-else,for-in,try-except,c,Python基礎,簡單,異常處理,語法題,異常處理,try-except是Python中用於處理異常的語句。try塊包含可能引發異常的代碼，except塊包含處理異常的代碼。if-else用於條件判斷，for-in用於迭代。
35,在Pandas中，以下哪個方法用於處理缺失值？,dropna(),removena(),deletena(),a,Pandas,簡單,Pandas缺失值處理,函數應用題,Pandas數據清洗,dropna()是Pandas中用於處理缺失值的方法，它可以刪除包含缺失值的行或列。removena()和deletena()不是Pandas的標準方法。
36,在Python中，以下哪個是列表的方法？,add(),append(),insert(),b,Python基礎,簡單,列表方法,函數應用題,數據結構,append()是Python列表的方法，用於在列表末尾添加一個元素。insert()也是列表的方法，用於在指定位置插入元素，但題目只問哪個是列表的方法，而不是哪些是列表的方法。add()不是列表的方法，而是集合的方法。
37,在Pandas中，以下哪個方法用於對DataFrame進行分組操作？,group(),groupby(),aggregate(),b,Pandas,簡單,Pandas分組操作,函數應用題,Pandas數據處理,groupby()是Pandas中用於對DataFrame進行分組操作的方法。group()不是Pandas的標準方法，aggregate()是用於對分組後的數據進行聚合操作的方法。
38,在Python中，以下哪個是字典的正確語法？,"{key, value}",{key: value},[key: value],b,Python基礎,簡單,字典語法,語法題,數據結構,"在Python中，字典的正確語法是{key: value}，其中key和value之間用冒號分隔。{key, value}是集合的語法，[key: value]不是有效的Python語法。"
39,在Matplotlib中，以下哪個函數用於顯示圖形？,plt.display(),plt.show(),plt.view(),b,資料視覺化,簡單,Matplotlib基本操作,函數應用題,Matplotlib基礎,plt.show()是Matplotlib中用於顯示圖形的函數。plt.display()和plt.view()不是Matplotlib的標準函數。
40,在NumPy中，以下哪個函數用於計算數組的標準差？,np.std(),np.stdev(),np.standarddev(),a,NumPy,簡單,NumPy統計函數,函數應用題,NumPy統計操作,np.std()是NumPy中用於計算數組標準差的函數。np.stdev()和np.standarddev()不是NumPy的標準函數。
41,"以下Pandas代碼的輸出是什麼？

import pandas as pd
df = pd.DataFrame({""A"": [1, 2, 3], ""B"": [4, 5, 6]})
print(df.loc[1])","A    1
B    4
Name: 0, dtype: int64","A    2
B    5
Name: 1, dtype: int64",2,b,Pandas,中等,Pandas索引,代碼執行題,Pandas數據訪問,"df.loc[1]選擇DataFrame中索引為1的行，返回一個Series。在這個例子中，索引1對應的行是A列為2，B列為5的行，所以結果是A    2
B    5
Name: 1, dtype: int64。"
42,"以下Python代碼的輸出是什麼？

data = {""a"": 1, ""b"": 2}
print(data.get(""c"", 3))",None,3,錯誤,b,Python基礎,中等,字典方法,代碼執行題,數據結構,"dict.get(key, default)方法返回字典中key對應的值，如果key不存在，則返回default值。在這個例子中，""c""不在字典中，所以返回默認值3。"
43,在Pandas中，以下哪個操作會返回一個新的DataFrame而不修改原始DataFrame？,"df.drop(""A"", axis=1, inplace=True)","df.drop(""A"", axis=1)","df.pop(""A"")",b,Pandas,中等,Pandas數據操作,概念題,Pandas數據處理,"df.drop(""A"", axis=1)返回一個新的DataFrame，其中不包含A列，但不修改原始DataFrame。df.drop(""A"", axis=1, inplace=True)直接修改原始DataFrame，不返回新的DataFrame。df.pop(""A"")也會修改原始DataFrame，並返回被刪除的列。"
44,"以下Matplotlib代碼會產生什麼類型的圖？

import matplotlib.pyplot as plt
plt.plot([1, 2, 3, 4], [1, 4, 9, 16], ""ro"")",紅色折線圖,紅色散點圖,紅色柱狀圖,b,資料視覺化,中等,Matplotlib繪圖風格,代碼執行題,Matplotlib繪圖,"plt.plot()函數的第三個參數是格式字符串，""ro""表示紅色(""r"")的圓點(""o"")，因此這段代碼會產生紅色散點圖。"
45,"以下NumPy代碼的輸出是什麼？

import numpy as np
a = np.array([[1, 2], [3, 4]])
print(a[:, 0])",[1 2],[1 3],"[[1], [3]]",b,NumPy,中等,NumPy索引,代碼執行題,NumPy數據訪問,"a[:, 0]選擇數組a的所有行的第0列。在這個例子中，第0列是[1, 3]，所以結果是[1 3]。"
46,在Pandas中，以下哪個方法用於合併兩個DataFrame？,pd.join(),pd.merge(),pd.combine(),b,Pandas,中等,Pandas數據合併,函數應用題,Pandas數據組合,pd.merge()是Pandas中用於合併兩個DataFrame的方法，它基於兩個DataFrame中的一個或多個共同列進行合併。pd.join()是基於索引的合併方法，pd.combine()不是Pandas的標準方法。
47,"以下Python代碼的輸出是什麼？

print(sorted([3, 1, 2], key=lambda x: -x))","[1, 2, 3]","[3, 2, 1]","[-3, -2, -1]",b,Python基礎,中等,排序與lambda函數,代碼執行題,函數進階,"sorted()函數按照key函數的返回值對列表進行排序。在這個例子中，key函數是lambda x: -x，它返回每個元素的負值。因此，排序時會按照元素的負值從小到大排序，相當於按照元素本身從大到小排序，結果是[3, 2, 1]。"
48,在Pandas中，以下哪個是正確的數據透視表(pivot table)操作？,"df.pivot(index=""A"", columns=""B"", values=""C"")","df.pivot_table(rows=""A"", cols=""B"", values=""C"")","df.crosstab(index=""A"", columns=""B"", values=""C"")",a,Pandas,中等,Pandas數據透視表,函數應用題,Pandas數據重塑,"df.pivot(index=""A"", columns=""B"", values=""C"")是正確的數據透視表操作，它將A列作為新DataFrame的索引，B列的唯一值作為新的列名，C列的值作為新DataFrame的值。df.pivot_table()方法的參數是index而不是rows，是columns而不是cols。df.crosstab()是用於計算分組頻率的函數，不是用於創建數據透視表的。"
49,"以下Seaborn代碼會產生什麼類型的圖？

import seaborn as sns
sns.heatmap(data)",散點圖,熱力圖,直方圖,b,資料視覺化,中等,Seaborn繪圖函數,函數應用題,Seaborn繪圖,sns.heatmap()函數用於繪製熱力圖，它將數據矩陣中的值用顏色表示，通常用於可視化數據的相關性或其他數值模式。
50,"以下Python代碼的輸出是什麼？

from collections import Counter
print(Counter(""banana""))","{'b': 1, 'a': 3, 'n': 2}","Counter({'a': 3, 'n': 2, 'b': 1})","['b', 'a', 'n', 'a', 'n', 'a']",b,Python基礎,中等,collections模塊,代碼執行題,標準庫,"Counter是collections模塊中的一個類，用於計數可哈希對象。Counter(""banana"")會返回一個Counter對象，其中包含每個字符及其出現的次數。打印這個對象時，會顯示為Counter({""a"": 3, ""n"": 2, ""b"": 1})，表示""a""出現3次，""n""出現2次，""b""出現1次。"
51,"以下Pandas代碼的輸出是什麼？

import pandas as pd
df = pd.DataFrame({""A"": [1, 2, None], ""B"": [4, None, 6]})
print(df.fillna(method=""ffill""))","   A    B
0  1.0  4.0
1  2.0  4.0
2  2.0  6.0","   A    B
0  1.0  4.0
1  2.0  NaN
2  NaN  6.0","   A    B
0  1.0  4.0
1  2.0  4.0
2  2.0  4.0",a,Pandas,中等,Pandas缺失值處理,代碼執行題,Pandas數據清洗,"df.fillna(method=""ffill"")用前向填充的方法處理缺失值，即用前一個非缺失值填充當前的缺失值。在這個例子中，A列的第3行（索引2）的缺失值被填充為前一行的值2，B列的第2行（索引1）的缺失值被填充為前一行的值4。"
52,在NumPy中，以下哪個函數用於計算兩個數組的相關係數？,np.correlate(),np.corrcoef(),np.correlation(),b,NumPy,中等,NumPy統計函數,函數應用題,NumPy統計操作,np.corrcoef()是NumPy中用於計算兩個數組的相關係數矩陣的函數。np.correlate()用於計算兩個一維數組的互相關，np.correlation()不是NumPy的標準函數。
53,"以下Python代碼的輸出是什麼？

print({x for x in range(10) if x % 2 == 0})","[0, 2, 4, 6, 8]","{0, 2, 4, 6, 8}","(0, 2, 4, 6, 8)",b,Python基礎,中等,集合推導式,代碼執行題,高級數據結構,"{x for x in range(10) if x % 2 == 0}是一個集合推導式，它生成一個包含range(10)中所有偶數的集合。因此結果是{0, 2, 4, 6, 8}。注意，集合是無序的，所以元素的順序可能不同。"
54,在Pandas中，以下哪個方法用於對Series或DataFrame進行重新索引？,reindex(),reset_index(),set_index(),a,Pandas,中等,Pandas索引操作,函數應用題,Pandas索引,reindex()方法用於對Series或DataFrame進行重新索引，可以改變、添加或刪除索引。reset_index()方法用於將當前索引重置為默認的整數索引，set_index()方法用於將DataFrame的一個或多個列設置為索引。
55,"以下Matplotlib代碼的作用是什麼？

import matplotlib.pyplot as plt
fig, (ax1, ax2) = plt.subplots(1, 2)",創建兩個獨立的圖形,創建一個包含兩個子圖的圖形,創建兩個重疊的圖形,b,資料視覺化,中等,Matplotlib子圖,代碼理解題,Matplotlib布局,"plt.subplots(1, 2)創建一個1行2列的子圖網格，返回一個圖形對象和一個包含兩個子圖對象的數組。因此，這段代碼的作用是創建一個包含兩個並排子圖的圖形。"
56,在Python中，以下哪個是生成器函數的特徵？,使用return返回多個值,使用yield關鍵字,使用@generator裝飾器,b,Python基礎,中等,生成器,概念題,函數進階,生成器函數的特徵是使用yield關鍵字而不是return關鍵字。yield會暫停函數的執行並保存當前狀態，然後在下一次調用時從暫停的地方繼續執行。Python沒有@generator裝飾器，使用return返回多個值通常會返回一個元組，而不是創建一個生成器。
57,"以下Pandas代碼的輸出是什麼？

import pandas as pd
df = pd.DataFrame({""A"": [1, 2, 3], ""B"": [4, 5, 6]})
print(df.apply(lambda x: x.max() - x.min()))","A    2
B    2
dtype: int64","A    3
B    6
dtype: int64","0    3
1    3
2    3
dtype: int64",a,Pandas,中等,Pandas apply函數,代碼執行題,Pandas數據處理,"df.apply(lambda x: x.max() - x.min())對DataFrame的每一列應用lambda函數，計算每列的最大值和最小值之差。A列的最大值是3，最小值是1，差值是2；B列的最大值是6，最小值是4，差值是2。因此結果是A    2
B    2
dtype: int64。"
58,在NumPy中，以下哪個函數用於生成正態分布的隨機數？,np.random.normal(),np.random.gaussian(),np.random.normaldist(),a,NumPy,中等,NumPy隨機數生成,函數應用題,NumPy隨機數,np.random.normal()是NumPy中用於生成正態分布隨機數的函數。np.random.gaussian()和np.random.normaldist()不是NumPy的標準函數。
59,在Python中，以下哪個模塊用於處理日期和時間？,time,datetime,calendar,b,Python基礎,中等,日期時間處理,概念題,標準庫,datetime模塊是Python中用於處理日期和時間的主要模塊，它提供了datetime、date、time等類來表示和操作日期和時間。time模塊主要提供與時間相關的函數，calendar模塊提供與日曆相關的函數。
60,"以下Pandas代碼的輸出是什麼？

import pandas as pd
df = pd.DataFrame({""A"": [1, 2, 3], ""B"": [4, 5, 6]})
print(df.describe().loc[""mean""])","A    2.0
B    5.0
Name: mean, dtype: float64","mean    3.5
dtype: float64","A    2.0
B    5.0
dtype: float64",a,Pandas,中等,Pandas描述性統計,代碼執行題,Pandas統計分析,"df.describe()返回DataFrame的描述性統計信息，包括計數、平均值、標準差、最小值、四分位數和最大值。df.describe().loc[""mean""]選擇其中的平均值行，結果是A列的平均值2.0和B列的平均值5.0，以Series的形式返回。"
61,"以下Pandas代碼的輸出是什麼？

import pandas as pd
df1 = pd.DataFrame({""key"": [""A"", ""B""], ""val"": [1, 2]})
df2 = pd.DataFrame({""key"": [""A"", ""C""], ""val"": [3, 4]})
print(pd.merge(df1, df2, on=""key"", how=""inner""))","  key  val_x  val_y
0   A      1      3","  key  val_x  val_y
0   A      1      3
1   B      2    NaN
2   C    NaN      4","  key  val_x  val_y
0   A      1      3
1   B      2    NaN",a,Pandas,困難,Pandas數據合併,代碼執行題,Pandas數據組合,"pd.merge(df1, df2, on=""key"", how=""inner"")執行內連接，只保留兩個DataFrame中key列值相同的行。在這個例子中，只有key為""A""的行在兩個DataFrame中都存在，所以結果只有一行，包含key=""A""，val_x=1（來自df1），val_y=3（來自df2）。"
62,"以下Python代碼的輸出是什麼？

class A:
    def __init__(self):
        self.x = 1
        
    def __call__(self):
        return self.x * 2
        
a = A()
print(a())",1,2,錯誤,b,Python基礎,困難,可調用對象,代碼執行題,面向對象高級,當一個類定義了__call__方法時，該類的實例可以像函數一樣被調用。在這個例子中，a是A類的一個實例，a()調用了a的__call__方法，返回self.x * 2，即1 * 2 = 2。
63,"以下NumPy代碼的輸出是什麼？

import numpy as np
a = np.array([1, 2, 3])
b = np.array([4, 5, 6])
print(np.vstack((a, b)))","[[1 2 3]
 [4 5 6]]","[[1 4]
 [2 5]
 [3 6]]",[1 2 3 4 5 6],a,NumPy,困難,NumPy數組堆疊,代碼執行題,NumPy數組操作,"np.vstack()函數將數組沿著垂直方向（行）堆疊。在這個例子中，a和b是兩個一維數組，np.vstack((a, b))將它們堆疊成一個2x3的二維數組，其中第一行是a，第二行是b。"
64,在Pandas中，以下哪種方法可以處理時間序列數據的重採樣(resampling)？,df.sample(),df.resample(),df.timesample(),b,Pandas,困難,Pandas時間序列,函數應用題,Pandas時間序列,df.resample()是Pandas中用於處理時間序列數據重採樣的方法，它可以將時間序列數據轉換為不同的頻率（例如，從每日數據轉換為每月數據）。df.sample()用於隨機抽樣，df.timesample()不是Pandas的標準方法。
65,"以下Seaborn代碼的作用是什麼？

import seaborn as sns
sns.pairplot(data)",繪製數據中每對變量的散點圖,繪製數據中每個變量的分布圖,繪製數據中每對變量的相關係數,a,資料視覺化,困難,Seaborn多變量繪圖,代碼理解題,Seaborn繪圖,sns.pairplot()函數用於繪製數據中每對變量的散點圖，並在對角線上繪製每個變量的分布圖。這是一種探索性數據分析的工具，可以幫助我們了解變量之間的關係和每個變量的分布情況。
66,"以下Python代碼的輸出是什麼？

from itertools import permutations
print(list(permutations(""ABC"", 2)))","[(""A"", ""B""), (""A"", ""C""), (""B"", ""A""), (""B"", ""C""), (""C"", ""A""), (""C"", ""B"")]","[(""A"", ""B""), (""A"", ""C""), (""B"", ""C"")]","[(""A"", ""B"", ""C""), (""A"", ""C"", ""B""), (""B"", ""A"", ""C""), (""B"", ""C"", ""A""), (""C"", ""A"", ""B""), (""C"", ""B"", ""A"")]",a,Python基礎,困難,itertools模塊,代碼執行題,標準庫,"itertools.permutations(iterable, r)返回iterable中長度為r的所有排列。在這個例子中，permutations(""ABC"", 2)返回""ABC""中所有長度為2的排列，即[(""A"", ""B""), (""A"", ""C""), (""B"", ""A""), (""B"", ""C""), (""C"", ""A""), (""C"", ""B"")]。"
67,在Pandas中，以下哪個方法用於計算滾動窗口統計量？,df.window(),df.rolling(),df.slide(),b,Pandas,困難,Pandas窗口函數,函數應用題,Pandas時間序列,df.rolling()是Pandas中用於計算滾動窗口統計量的方法，它可以計算移動平均、移動標準差等。df.window()和df.slide()不是Pandas的標準方法。
68,"以下NumPy代碼的輸出是什麼？

import numpy as np
a = np.array([1, 2, 3, 4])
print(np.einsum(""i->"", a))",[10],10,[1 2 3 4],b,NumPy,困難,NumPy愛因斯坦求和,代碼執行題,NumPy高級特性,"np.einsum()是NumPy中用於執行愛因斯坦求和約定的函數。""i->""表示對索引i求和，相當於np.sum(a)。在這個例子中，a的元素之和是1+2+3+4=10，所以結果是10。"
69,在Python中，以下哪個是上下文管理器的正確用法？,"with open(""file.txt"") as f:
    data = f.read()","using open(""file.txt"") as f:
    data = f.read()","context open(""file.txt"") as f:
    data = f.read()",a,Python基礎,困難,上下文管理器,語法題,文件操作,在Python中，上下文管理器的正確用法是with語句。with語句可以確保文件在使用後被正確關閉，即使發生異常也是如此。using和context不是Python中用於上下文管理的關鍵字。
70,"以下Pandas代碼的輸出是什麼？

import pandas as pd
df = pd.DataFrame({""A"": [1, 2, 3], ""B"": [4, 5, 6]})
print(df.eval(""C = A + B""))","   A  B   C
0  1  4   5
1  2  5   7
2  3  6   9","   A  B
0  1  4
1  2  5
2  3  6
C = A + B",錯誤,a,Pandas,困難,Pandas表達式計算,代碼執行題,Pandas高級特性,"df.eval(""C = A + B"")在DataFrame中添加一個新列C，其值為A列和B列的和。在這個例子中，C列的值是[5, 7, 9]，結果是一個包含A、B、C三列的DataFrame。"
71,在數據分析中，以下哪個不是常見的數據清洗步驟？,處理缺失值,數據標準化,數據可視化,c,數據分析概念,簡單,數據清洗流程,概念題,數據預處理,數據可視化不是數據清洗的步驟，而是數據分析和呈現的步驟。常見的數據清洗步驟包括處理缺失值、處理異常值、處理重複數據、數據類型轉換等。數據標準化通常被視為特徵工程的一部分，但有時也被包括在數據清洗中。
72,在Python中，以下哪個函數用於生成一個序列的累積和？,sum(),cumsum(),np.sum(),b,NumPy,中等,NumPy累積函數,函數應用題,NumPy數組操作,"cumsum()是NumPy數組的方法，用於計算數組的累積和。例如，對於數組[1, 2, 3, 4]，其累積和是[1, 1+2, 1+2+3, 1+2+3+4]，即[1, 3, 6, 10]。sum()函數計算的是序列的總和，np.sum()是NumPy中計算數組元素總和的函數。"
73,在Pandas中，以下哪個方法用於計算兩個Series或DataFrame之間的相關係數？,correlation(),corr(),correlate(),b,Pandas,中等,Pandas統計函數,函數應用題,Pandas統計分析,corr()是Pandas中用於計算Series或DataFrame之間相關係數的方法。對於DataFrame，它計算所有列之間的相關係數矩陣；對於Series，它計算與另一個Series的相關係數。correlation()和correlate()不是Pandas的標準方法。
74,"以下Python代碼的輸出是什麼？

print(list(zip([1, 2, 3], [""a"", ""b"", ""c"", ""d""])))","[(1, ""a""), (2, ""b""), (3, ""c""), (None, ""d"")]","[(1, ""a""), (2, ""b""), (3, ""c"")]",錯誤,b,Python基礎,簡單,zip函數,代碼執行題,內置函數,"zip()函數將多個可迭代對象中的元素打包成元組，返回這些元組的迭代器。當可迭代對象的長度不同時，zip()會以最短的可迭代對象為準，忽略多餘的元素。在這個例子中，第一個列表的長度是3，第二個列表的長度是4，所以zip()只會處理前3個元素，結果是[(1, ""a""), (2, ""b""), (3, ""c"")]。"
75,在Matplotlib中，以下哪個參數用於設置圖形標題？,title,name,label,a,資料視覺化,簡單,Matplotlib圖形設置,函數應用題,Matplotlib基礎,"在Matplotlib中，title參數用於設置圖形標題。例如，plt.title(""My Title"")或ax.set_title(""My Title"")。name和label參數在這個上下文中沒有特定的含義。"
76,"以下NumPy代碼的輸出是什麼？

import numpy as np
a = np.array([1, 2, 3])
print(a.dtype)",int,int64,float64,b,NumPy,簡單,NumPy數據類型,代碼執行題,NumPy基礎,a.dtype返回NumPy數組a的數據類型。在這個例子中，a是一個包含整數的數組，所以其數據類型是int64（在64位系統上）。具體的類型可能因系統而異，但一般是int64或int32。
77,在Pandas中，以下哪個方法用於檢測缺失值？,isna(),isnull(),以上兩者都可以,c,Pandas,簡單,Pandas缺失值處理,函數應用題,Pandas數據清洗,isna()和isnull()都是Pandas中用於檢測缺失值的方法，它們是完全等價的。這兩個方法返回一個與原DataFrame或Series形狀相同的布爾值DataFrame或Series，其中True表示該位置的值是缺失的。
78,在數據分析中，以下哪種圖表最適合顯示分類數據的分布？,散點圖,柱狀圖,折線圖,b,資料視覺化,簡單,圖表選擇,概念題,數據可視化基礎,柱狀圖是顯示分類數據分布的最佳圖表類型，它可以清晰地展示每個類別的頻率或數量。散點圖主要用於顯示兩個連續變量之間的關係，折線圖主要用於顯示連續數據隨時間的變化趨勢。
79,"以下Python代碼的輸出是什麼？

from collections import defaultdict
d = defaultdict(int)
d[""a""] += 1
print(d[""b""])",1,0,錯誤,b,Python基礎,中等,defaultdict,代碼執行題,標準庫,"defaultdict是collections模塊中的一個類，它是dict的子類，但在訪問不存在的鍵時，會自動創建該鍵並賦予一個默認值。defaultdict(int)創建一個defaultdict，其默認值是int()的結果，即0。因此，當訪問不存在的鍵""b""時，會返回0。"
80,在Pandas中，以下哪個方法用於根據條件篩選數據？,filter(),query(),select(),b,Pandas,中等,Pandas數據篩選,函數應用題,Pandas數據訪問,"query()是Pandas中用於根據條件篩選數據的方法，它接受一個字符串表達式作為參數，返回滿足條件的行。例如，df.query(""A > 0 & B < 10"")。filter()方法用於根據標籤或索引篩選行或列，select()不是Pandas的標準方法。"
81,"以下NumPy代碼的輸出是什麼？

import numpy as np
a = np.array([1, 2, 3, 4])
print(np.argmax(a))",4,3,[3],b,NumPy,中等,NumPy索引函數,代碼執行題,NumPy數組操作,np.argmax()返回數組中最大值的索引。在這個例子中，a的最大值是4，其索引是3（因為NumPy數組的索引從0開始），所以結果是3。
82,在Seaborn中，以下哪個函數用於繪製分類數據的箱線圖？,sns.boxplot(),sns.barplot(),sns.violinplot(),a,資料視覺化,中等,Seaborn繪圖函數,函數應用題,Seaborn繪圖,sns.boxplot()是Seaborn中用於繪製分類數據箱線圖的函數。箱線圖顯示數據的四分位數和離群值，是一種展示數據分布的有效方式。sns.barplot()用於繪製分類數據的柱狀圖，sns.violinplot()用於繪製分類數據的小提琴圖，它結合了箱線圖和核密度估計。
83,"以下Python代碼的輸出是什麼？

import re
print(re.sub(r""\d+"", ""#"", ""abc123def456""))",abc#def#,#abc#def#,abc#123def#456,a,Python基礎,困難,正則表達式,代碼執行題,字符串處理,"re.sub(pattern, repl, string)用一個字符串替換正則表達式匹配的所有子串。在這個例子中，pattern是r""\d+""，它匹配一個或多個數字；repl是""#""；string是""abc123def456""。因此，所有的數字序列都被替換為""#""，結果是""abc#def#""。"
84,在Pandas中，以下哪個方法用於對時間序列數據進行頻率轉換？,convert_frequency(),asfreq(),change_freq(),b,Pandas,困難,Pandas時間序列,函數應用題,Pandas時間序列,asfreq()是Pandas中用於對時間序列數據進行頻率轉換的方法。例如，將每日數據轉換為每月數據。convert_frequency()和change_freq()不是Pandas的標準方法。
85,"以下NumPy代碼的輸出是什麼？

import numpy as np
a = np.array([[1, 2], [3, 4]])
print(np.linalg.det(a))",5,-2,-2.0,c,NumPy,困難,NumPy線性代數,代碼執行題,NumPy線性代數,"np.linalg.det()計算矩陣的行列式。對於2x2矩陣[[a, b], [c, d]]，其行列式是ad - bc。在這個例子中，行列式是1*4 - 2*3 = 4 - 6 = -2。由於NumPy中的浮點數計算，結果顯示為-2.0。"
86,在數據分析中，以下哪個不是描述性統計量？,平均值,標準差,p值,c,數據分析概念,中等,統計概念,概念題,統計基礎,p值不是描述性統計量，而是推斷性統計中用於假設檢驗的一個概念，它表示在原假設為真的情況下，觀察到的結果或更極端結果的概率。平均值和標準差是常見的描述性統計量，用於描述數據的中心趨勢和離散程度。
87,"以下Pandas代碼的輸出是什麼？

import pandas as pd
df = pd.DataFrame({""A"": [1, 2, 3], ""B"": [4, 5, 6]})
print(df.stack().shape)","(3, 2)","(6,)","(6, 1)",b,Pandas,困難,Pandas數據重塑,代碼執行題,Pandas數據重塑,"df.stack()將DataFrame的列轉換為行，生成一個MultiIndex Series。在這個例子中，原DataFrame有3行2列，共6個元素，stack後變成一個包含6個元素的Series，其形狀是(6,)。"
88,在Python中，以下哪個是裝飾器的主要作用？,增加函數的執行速度,修改函數的行為而不改變其源碼,減少函數的內存使用,b,Python基礎,中等,裝飾器,概念題,函數進階,裝飾器是Python中的一種設計模式，它的主要作用是修改函數的行為而不改變其源碼。裝飾器可以在函數執行前後添加額外的功能，例如日誌記錄、性能測量、訪問控制等。增加函數的執行速度和減少函數的內存使用不是裝飾器的主要目的。
89,"以下NumPy代碼的輸出是什麼？

import numpy as np
a = np.array([1, 2, 3, 4])
b = a.view()
b.shape = (2, 2)
print(a.shape)","(4,)","(2, 2)",錯誤,b,NumPy,困難,NumPy視圖與副本,代碼執行題,NumPy數據訪問,"a.view()創建數組a的視圖b，視圖與原數組共享數據，但有自己的屬性。當我們改變b的形狀時，a的形狀也會改變，因為它們共享同一塊數據。因此，a.shape的結果是(2, 2)。"
90,在Matplotlib中，以下哪個函數用於保存圖形到文件？,plt.save(),plt.savefig(),plt.export(),b,資料視覺化,簡單,Matplotlib圖形保存,函數應用題,Matplotlib基礎,plt.savefig()是Matplotlib中用於保存圖形到文件的函數。它可以將圖形保存為多種格式，如PNG、PDF、SVG等。plt.save()和plt.export()不是Matplotlib的標準函數。
91,在數據分析中，以下哪個不是常見的數據轉換方法？,標準化,歸一化,序列化,c,數據分析概念,簡單,數據預處理,概念題,數據預處理,"序列化不是數據分析中的數據轉換方法，而是將對象轉換為可存儲或傳輸的格式的過程。標準化和歸一化是常見的數據轉換方法，用於將數據轉換到特定的範圍或分布。標準化通常指將數據轉換為均值為0、標準差為1的分布，歸一化通常指將數據轉換為[0, 1]或[-1, 1]的範圍。"
92,"以下Python代碼的輸出是什麼？

class MyClass:
    def __init__(self, value):
        self._value = value
    
    @property
    def value(self):
        return self._value * 2

obj = MyClass(5)
print(obj.value)",5,10,錯誤,b,Python基礎,困難,屬性裝飾器,代碼執行題,面向對象高級,@property裝飾器將方法轉換為屬性，使其可以像屬性一樣被訪問，而不需要使用括號調用。在這個例子中，value方法被轉換為屬性，當訪問obj.value時，value方法被調用，返回self._value * 2，即5 * 2 = 10。
93,在Pandas中，以下哪個方法用於將長格式數據轉換為寬格式？,pivot(),melt(),transpose(),a,Pandas,困難,Pandas數據重塑,函數應用題,Pandas數據重塑,pivot()是Pandas中用於將長格式數據轉換為寬格式的方法。長格式數據是指每行包含一個觀測值的數據，寬格式數據是指每行包含多個觀測值的數據。melt()方法用於將寬格式數據轉換為長格式，transpose()方法用於轉置DataFrame（交換行和列）。
94,"以下NumPy代碼的輸出是什麼？

import numpy as np
a = np.array([1, 2, 3])
print(np.tile(a, 2))",[1 2 3 1 2 3],"[[1 2 3]
 [1 2 3]]",[2 4 6],a,NumPy,中等,NumPy數組重複,代碼執行題,NumPy數組操作,"np.tile(a, 2)將數組a重複2次。對於一維數組，這意味著將數組的內容連接起來重複指定的次數。在這個例子中，a = [1, 2, 3]，np.tile(a, 2)的結果是[1, 2, 3, 1, 2, 3]。"
95,在數據分析中，以下哪種圖表最適合顯示兩個連續變量之間的關係？,柱狀圖,餅圖,散點圖,c,資料視覺化,簡單,圖表選擇,概念題,數據可視化基礎,散點圖是顯示兩個連續變量之間關係的最佳圖表類型，它可以直觀地展示兩個變量之間的相關性和模式。柱狀圖主要用於顯示分類數據的分布，餅圖主要用於顯示部分與整體的關係。
96,"以下Python代碼的輸出是什麼？

from functools import reduce
print(reduce(lambda x, y: x + y, [1, 2, 3, 4]))",10,"[1, 2, 3, 4]",[10],a,Python基礎,中等,functools模塊,代碼執行題,函數式編程,"reduce()函數對一個序列的元素從左到右依次應用一個二元函數，將結果與下一個元素再次應用該函數，直到處理完所有元素。在這個例子中，lambda x, y: x + y是一個二元函數，它將兩個參數相加。reduce(lambda x, y: x + y, [1, 2, 3, 4])的計算過程是((1+2)+3)+4 = 10。"
97,在Pandas中，以下哪個方法用於計算DataFrame中每列的唯一值數量？,unique(),nunique(),count_unique(),b,Pandas,中等,Pandas數據分析,函數應用題,Pandas數據分析,nunique()是Pandas中用於計算DataFrame中每列的唯一值數量的方法。unique()方法返回Series中的唯一值，而不是計算唯一值的數量。count_unique()不是Pandas的標準方法。
98,"以下NumPy代碼的輸出是什麼？

import numpy as np
a = np.array([[1, 2], [3, 4]])
print(np.trace(a))",3,5,10,b,NumPy,困難,NumPy線性代數,代碼執行題,NumPy線性代數,np.trace()計算矩陣的跡，即主對角線元素的和。在這個例子中，矩陣a的主對角線元素是1和4，它們的和是1+4=5，所以結果是5。
99,在數據分析中，以下哪個是異常值檢測的常用方法？,IQR法則,K-means聚類,主成分分析,a,數據分析概念,困難,異常值檢測,概念題,數據預處理,IQR法則（四分位距法則）是異常值檢測的常用方法。它基於數據的四分位數，將小於Q1-1.5*IQR或大於Q3+1.5*IQR的值視為異常值，其中Q1是第一四分位數，Q3是第三四分位數，IQR=Q3-Q1是四分位距。K-means聚類和主成分分析主要用於數據降維和模式識別，雖然也可以用於異常值檢測，但不是最常用的方法。
100,"以下Pandas代碼的輸出是什麼？

import pandas as pd
df = pd.DataFrame({""A"": [1, 2, 3], ""B"": [4, 5, 6]})
print(df.agg({""A"": ""sum"", ""B"": ""mean""}))","A    6
B    5
dtype: int64","A    6.0
B    5.0
dtype: float64","sum     6
mean    5
dtype: int64",a,Pandas,困難,Pandas聚合函數,代碼執行題,Pandas數據處理,df.agg()方法用於對DataFrame應用聚合函數。在這個例子中，我們對A列應用sum函數，對B列應用mean函數。A列的和是1+2+3=6，B列的平均值是(4+5+6)/3=5。結果是一個Series，其索引是列名，值是聚合結果。
